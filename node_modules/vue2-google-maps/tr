[1mdiff --git a/src/components/circle.js b/src/components/circle.js[m
[1mindex 6a5c0e9..97dffcf 100644[m
[1m--- a/src/components/circle.js[m
[1m+++ b/src/components/circle.js[m
[36m@@ -51,11 +51,13 @@[m [mexport default {[m
 [m
   render () { return '' },[m
 [m
[31m-  deferredReady () {[m
[31m-    const options = clone(this.getPropsValues())[m
[31m-    options.map = this.$map[m
[31m-    delete options.bounds[m
[31m-    this.createCircle(options)[m
[32m+[m[32m  created () {[m
[32m+[m[32m    this.$mapPromise.then((map) => {[m
[32m+[m[32m      const options = clone(this.getPropsValues())[m
[32m+[m[32m      options.map = map[m
[32m+[m[32m      delete options.bounds[m
[32m+[m[32m      this.createCircle(options)[m
[32m+[m[32m    })[m
   },[m
 [m
   methods: {[m
[1mdiff --git a/src/components/cluster.js b/src/components/cluster.js[m
[1mindex 324794d..28a095a 100644[m
[1m--- a/src/components/cluster.js[m
[1m+++ b/src/components/cluster.js[m
[36m@@ -58,25 +58,42 @@[m [mexport default {[m
     )[m
   },[m
 [m
[31m-  deferredReady () {[m
[31m-    const options = clone(this.getPropsValues())[m
[32m+[m[32m  provide () {[m
[32m+[m[32m    const clusterPromise = this.$mapPromise.then((map) => {[m
[32m+[m[32m      const options = clone(this.getPropsValues())[m
 [m
[31m-    if (typeof MarkerClusterer === 'undefined') {[m
[31m-      /* eslint-disable no-console */[m
[31m-      console.error('MarkerClusterer is not installed! require() it or include it from https://cdnjs.cloudflare.com/ajax/libs/js-marker-clusterer/1.0.0/markerclusterer.js')[m
[31m-      throw new Error('MarkerClusterer is not installed! require() it or include it from https://cdnjs.cloudflare.com/ajax/libs/js-marker-clusterer/1.0.0/markerclusterer.js')[m
[32m+[m[32m      if (typeof MarkerClusterer === 'undefined') {[m
[32m+[m[32m        /* eslint-disable no-console */[m
[32m+[m[32m        console.error('MarkerClusterer is not installed! require() it or include it from https://cdnjs.cloudflare.com/ajax/libs/js-marker-clusterer/1.0.0/markerclusterer.js')[m
[32m+[m[32m        throw new Error('MarkerClusterer is not installed! require() it or include it from https://cdnjs.cloudflare.com/ajax/libs/js-marker-clusterer/1.0.0/markerclusterer.js')[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      this.$clusterObject = new MarkerClusterer(map, [], options)[m
[32m+[m
[32m+[m[32m      propsBinder(this, this.$clusterObject, props, {[m
[32m+[m[32m        afterModelChanged: (a, v) => { // eslint-disable-line no-unused-vars[m
[32m+[m[32m          const oldMarkers = this.$clusterObject.getMarkers()[m
[32m+[m
[32m+[m[32m          console.log('prop changed', oldMarkers)[m
[32m+[m
[32m+[m[32m          this.$clusterObject.clearMarkers()[m
[32m+[m[32m          this.$clusterObject.addMarkers(oldMarkers)[m
[32m+[m[32m        }[m
[32m+[m[32m      })[m
[32m+[m[32m      eventsBinder(this, this.$clusterObject, events)[m
[32m+[m
[32m+[m[32m      return this.$clusterObject[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      $clusterPromise: clusterPromise[m
     }[m
[32m+[m[32m  },[m
 [m
[31m-    this.$clusterObject = new MarkerClusterer(this.$map, [], options)[m
[32m+[m[32m  created () {[m
[32m+[m[32m    this.$mapPromise.then(() => {[m
 [m
[31m-    propsBinder(this, this.$clusterObject, props, {[m
[31m-      afterModelChanged: (a, v) => { // eslint-disable-line no-unused-vars[m
[31m-        const oldMarkers = this.$clusterObject.getMarkers()[m
[31m-        this.$clusterObject.clearMarkers()[m
[31m-        this.$clusterObject.addMarkers(oldMarkers)[m
[31m-      }[m
     })[m
[31m-    eventsBinder(this, this.$clusterObject, events)[m
   },[m
 [m
   beforeDestroy () {[m
[36m@@ -86,6 +103,7 @@[m [mexport default {[m
         marker.$clusterObject = null[m
       }[m
     })[m
[32m+[m
     if (this.$clusterObject) {[m
       this.$clusterObject.clearMarkers()[m
     }[m
[1mdiff --git a/src/components/infoWindowImpl.js b/src/components/infoWindowImpl.js[m
[1mindex 3744e8c..1dad184 100644[m
[1m--- a/src/components/infoWindowImpl.js[m
[1m+++ b/src/components/infoWindowImpl.js[m
[36m@@ -37,21 +37,27 @@[m [mexport default {[m
   replace: false,[m
   props: props,[m
 [m
[32m+[m[32m  inject: {[m
[32m+[m[32m    '$markerPromise': {[m
[32m+[m[32m      default: null,[m
[32m+[m[32m    }[m
[32m+[m[32m  },[m
[32m+[m
   mounted () {[m
     const el = this.$refs.flyaway[m
     el.parentNode.removeChild(el)[m
   },[m
 [m
[31m-  deferredReady () {[m
[31m-    this.$markerObject = null[m
[31m-    this.$markerComponent = this.$findAncestor([m
[31m-      (ans) => ans.$markerObject[m
[31m-    )[m
[32m+[m[32m  created () {[m
[32m+[m[32m    const markerPromise = this.$markerPromise[m
[32m+[m[32m      ? this.$markerPromise.then(mo => this.$markerObject = mo)[m
[32m+[m[32m      : Promise.resolve(null)[m
 [m
[31m-    if (this.$markerComponent) {[m
[31m-      this.$markerObject = this.$markerComponent.$markerObject[m
[31m-    }[m
[31m-    this.createInfoWindow()[m
[32m+[m[32m    const mapPromise = this.$mapPromise[m
[32m+[m
[32m+[m[32m    return mapPromise[m
[32m+[m[32m      .then(() => markerPromise)[m
[32m+[m[32m      .then(() => this.createInfoWindow())[m
   },[m
 [m
   destroyed () {[m
[1mdiff --git a/src/components/mapElementMixin.js b/src/components/mapElementMixin.js[m
[1mindex 81937ac..83e893c 100644[m
[1m--- a/src/components/mapElementMixin.js[m
[1m+++ b/src/components/mapElementMixin.js[m
[36m@@ -1,9 +1,5 @@[m
[31m-/* vim: set softtabstop=2 shiftwidth=2 expandtab : */[m
[31m-[m
[31m-import {DeferredReadyMixin} from '../utils/deferredReady'[m
[31m-[m
 /**[m
[31m- * @class MapElementMixin @mixins DeferredReadyMixin[m
[32m+[m[32m * @class MapElementMixin[m
  *[m
  * Extends components to include the following fields:[m
  *[m
[36m@@ -12,47 +8,24 @@[m [mimport {DeferredReadyMixin} from '../utils/deferredReady'[m
  *[m
  * */[m
 export default {[m
[32m+[m[32m  inject: {[m
[32m+[m[32m    '$mapPromise': { default: 'abcdef' }[m
[32m+[m[32m  },[m
 [m
[31m-  mixins: [DeferredReadyMixin],[m
[31m-[m
[31m-  created () {[m
[31m-    /* Search for the Map component in the parent */[m
[31m-    let search = this.$findAncestor([m
[31m-      ans => ans.$mapCreated[m
[31m-    )[m
[31m-[m
[31m-    if (!search) {[m
[31m-      throw new Error(`${this.constructor.name} component must be used within a <Map>`)[m
[31m-    }[m
[31m-[m
[31m-    this.$mapPromise = search.$mapCreated.then((map) => {[m
[32m+[m[32m  provide () {[m
[32m+[m[32m    // Note: although this mixin is not "providing" anything,[m
[32m+[m[32m    // components' expect the `$map` property to be present on the component.[m
[32m+[m[32m    // In order for that to happen, this mixin must intercept the $mapPromise[m
[32m+[m[32m    // .then(() =>) first before its component does so.[m
[32m+[m[32m    //[m
[32m+[m[32m    // Since a provide() on a mixin is executed before a provide() on the[m
[32m+[m[32m    // component, putting this code in provide() ensures that the $map is[m
[32m+[m[32m    // already set by the time the[m
[32m+[m[32m    // component's provide() is called.[m
[32m+[m[32m    this.$mapPromise.then((map) => {[m
       this.$map = map[m
     })[m
[31m-    // FIXME: This is a hack to ensure correct loading[m
[31m-    // when the map has already be instantiated.[m
[31m-    if (search.$mapObject) {[m
[31m-      this.$map = search.$mapObject[m
[31m-    }[m
[31m-    this.$MapElementMixin = search[m
[31m-    this.$map = null[m
[31m-  },[m
 [m
[31m-  beforeDeferredReady () {[m
[31m-    return this.$mapPromise[m
[32m+[m[32m    return {}[m
   },[m
[31m-[m
[31m-  methods: {[m
[31m-    $findAncestor (condition) {[m
[31m-      let search = this.$parent[m
[31m-[m
[31m-      while (search) {[m
[31m-        if (condition(search)) {[m
[31m-          return search[m
[31m-        }[m
[31m-        search = search.$parent[m
[31m-      }[m
[31m-      return null[m
[31m-    }[m
[31m-  }[m
[31m-[m
 }[m
[1mdiff --git a/src/components/mapImpl.js b/src/components/mapImpl.js[m
[1mindex f0a32ec..324e1b3 100644[m
[1m--- a/src/components/mapImpl.js[m
[1m+++ b/src/components/mapImpl.js[m
[36m@@ -2,7 +2,6 @@[m [mimport omit from 'lodash/omit'[m
 import clone from 'lodash/clone'[m
 [m
 import { loaded } from '../manager.js'[m
[31m-import { DeferredReadyMixin } from '../utils/deferredReady.js'[m
 import eventsBinder from '../utils/eventsBinder.js'[m
 import propsBinder from '../utils/propsBinder.js'[m
 import getPropsMixin from '../utils/getPropsValuesMixin.js'[m
[36m@@ -98,14 +97,16 @@[m [mconst customMethods = {[m
 const methods = Object.assign({}, customMethods, linkedMethods)[m
 [m
 export default {[m
[31m-  mixins: [getPropsMixin, DeferredReadyMixin, mountableMixin],[m
[32m+[m[32m  mixins: [getPropsMixin, mountableMixin],[m
   props: props,[m
   replace: false, // necessary for css styles[m
 [m
[31m-  created () {[m
[31m-    this.$mapCreated = new Promise((resolve, reject) => {[m
[31m-      this.$mapCreatedDeferred = { resolve, reject }[m
[31m-    })[m
[32m+[m[32m  provide () {[m
[32m+[m[32m    return {[m
[32m+[m[32m      '$mapPromise': new Promise((resolve, reject) => {[m
[32m+[m[32m        this.$mapPromiseDeferred = { resolve, reject }[m
[32m+[m[32m      })[m
[32m+[m[32m    }[m
   },[m
 [m
   computed: {[m
[36m@@ -130,7 +131,7 @@[m [mexport default {[m
     }[m
   },[m
 [m
[31m-  deferredReady () {[m
[32m+[m[32m  mounted () {[m
     return loaded.then(() => {[m
       // getting the DOM element where to create the map[m
       const element = this.$refs['vue-map'][m
[36m@@ -170,13 +171,13 @@[m [mexport default {[m
       // binding events[m
       eventsBinder(this, this.$mapObject, events)[m
 [m
[31m-      this.$mapCreatedDeferred.resolve(this.$mapObject)[m
[32m+[m[32m      this.$mapPromiseDeferred.resolve(this.$mapObject)[m
 [m
[31m-      return this.$mapCreated[m
[32m+[m[32m      return this.$mapObject[m
[32m+[m[32m    })[m
[32m+[m[32m    .catch((error) => {[m
[32m+[m[32m      throw error[m
     })[m
[31m-      .catch((error) => {[m
[31m-        throw error[m
[31m-      })[m
   },[m
   methods: methods[m
 }[m
[1mdiff --git a/src/components/marker.js b/src/components/marker.js[m
[1mindex 44cd033..65f7476 100644[m
[1m--- a/src/components/marker.js[m
[1m+++ b/src/components/marker.js[m
[36m@@ -92,6 +92,12 @@[m [mexport default {[m
   mixins: [MapElementMixin, getPropsValuesMixin],[m
   props: props,[m
 [m
[32m+[m[32m  inject: {[m
[32m+[m[32m    '$clusterPromise': {[m
[32m+[m[32m      default: null,[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m
   render (h) {[m
     if (!this.$slots.default || this.$slots.default.length === 0) {[m
       return ''[m
[36m@@ -115,30 +121,43 @@[m [mexport default {[m
     }[m
   },[m
 [m
[31m-  deferredReady () {[m
[31m-    const options = mapValues(props, (value, prop) => this[prop])[m
[31m-    options.map = this.$map[m
[31m-    delete options.options[m
[31m-    Object.assign(options, this.options)[m
[32m+[m[32m  provide () {[m
[32m+[m[32m    const markerPromise = this.$mapPromise.then((map) => {[m
[32m+[m[32m      const options = mapValues(props, (value, prop) => this[prop])[m
[32m+[m[32m      options.map = map[m
[32m+[m[32m      delete options.options[m
[32m+[m[32m      Object.assign(options, this.options)[m
[32m+[m
[32m+[m[32m      // search ancestors for cluster object[m
[32m+[m[32m      const clusterPromise = this.$clusterPromise[m
[32m+[m[32m        ? this.$clusterPromise.then(co => this.$clusterObject = co)[m
[32m+[m[32m        : Promise.resolve(null)[m
 [m
[31m-    // search ancestors for cluster object[m
[31m-    let search = this.$findAncestor([m
[31m-      ans => ans.$clusterObject[m
[31m-    )[m
[32m+[m[32m      console.log(options)[m
 [m
[31m-    this.$clusterObject = search ? search.$clusterObject : null[m
[31m-    this.createMarker(options)[m
[32m+[m[32m      return clusterPromise.then(() => {[m
[32m+[m[32m        const marker = this.createMarker(options)[m
[32m+[m[32m        this.$markerObject = marker[m
[32m+[m[32m        return marker[m
[32m+[m[32m      })[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      '$markerPromise': markerPromise[m
[32m+[m[32m    }[m
   },[m
 [m
   methods: {[m
     createMarker (options) {[m
[31m-      this.$markerObject = new google.maps.Marker(options)[m
[31m-      propsBinder(this, this.$markerObject, props)[m
[31m-      eventsBinder(this, this.$markerObject, events)[m
[32m+[m[32m      const markerObject = new google.maps.Marker(options)[m
[32m+[m[32m      propsBinder(this, markerObject, props)[m
[32m+[m[32m      eventsBinder(this, markerObject, events)[m
 [m
       if (this.$clusterObject) {[m
[31m-        this.$clusterObject.addMarker(this.$markerObject)[m
[32m+[m[32m        console.log('Cluster object found!')[m
[32m+[m[32m        this.$clusterObject.addMarker(markerObject)[m
       }[m
[32m+[m[32m      return markerObject[m
     }[m
   },[m
 }[m
[1mdiff --git a/src/components/polygon.js b/src/components/polygon.js[m
[1mindex 36d5d10..1b207c5 100644[m
[1m--- a/src/components/polygon.js[m
[1m+++ b/src/components/polygon.js[m
[36m@@ -56,85 +56,87 @@[m [mexport default {[m
     }[m
   },[m
 [m
[31m-  deferredReady () {[m
[31m-    const options = clone(this.getPropsValues())[m
[31m-    delete options.options[m
[31m-    Object.assign(options, this.options)[m
[31m-    if (!options.path) {[m
[31m-      delete options.path[m
[31m-    }[m
[31m-    if (!options.paths) {[m
[31m-      delete options.paths[m
[31m-    }[m
[31m-    this.$polygonObject = new google.maps.Polygon(options)[m
[31m-[m
[31m-    propsBinder(this, this.$polygonObject, omit(props, ['path', 'paths', 'deepWatch']))[m
[31m-    eventBinder(this, this.$polygonObject, events)[m
[32m+[m[32m  created () {[m
[32m+[m[32m    this.$mapPromise.then(() => {[m
[32m+[m[32m      const options = clone(this.getPropsValues())[m
[32m+[m[32m      delete options.options[m
[32m+[m[32m      Object.assign(options, this.options)[m
[32m+[m[32m      if (!options.path) {[m
[32m+[m[32m        delete options.path[m
[32m+[m[32m      }[m
[32m+[m[32m      if (!options.paths) {[m
[32m+[m[32m        delete options.paths[m
[32m+[m[32m      }[m
[32m+[m[32m      this.$polygonObject = new google.maps.Polygon(options)[m
[32m+[m
[32m+[m[32m      propsBinder(this, this.$polygonObject, omit(props, ['path', 'paths', 'deepWatch']))[m
[32m+[m[32m      eventBinder(this, this.$polygonObject, events)[m
[32m+[m
[32m+[m[32m      var clearEvents = () => {}[m
[32m+[m
[32m+[m[32m      // Watch paths, on our own, because we do not want to set either when it is[m
[32m+[m[32m      // empty[m
[32m+[m[32m      this.$watch('paths', (paths) => {[m
[32m+[m[32m        if (paths) {[m
[32m+[m[32m          clearEvents()[m
[32m+[m
[32m+[m[32m          this.$polygonObject.setPaths(paths)[m
[32m+[m
[32m+[m[32m          const updatePaths = () => {[m
[32m+[m[32m            this.$emit('paths_changed', this.$polygonObject.getPaths())[m
[32m+[m[32m          }[m
[32m+[m[32m          const eventListeners = [][m
[32m+[m
[32m+[m[32m          const mvcArray = this.$polygonObject.getPaths()[m
[32m+[m[32m          for (let i = 0; i < mvcArray.getLength(); i++) {[m
[32m+[m[32m            let mvcPath = mvcArray.getAt(i)[m
[32m+[m[32m            eventListeners.push([mvcPath, mvcPath.addListener('insert_at', updatePaths)])[m
[32m+[m[32m            eventListeners.push([mvcPath, mvcPath.addListener('remove_at', updatePaths)])[m
[32m+[m[32m            eventListeners.push([mvcPath, mvcPath.addListener('set_at', updatePaths)])[m
[32m+[m[32m          }[m
[32m+[m[32m          eventListeners.push([mvcArray, mvcArray.addListener('insert_at', updatePaths)])[m
[32m+[m[32m          eventListeners.push([mvcArray, mvcArray.addListener('remove_at', updatePaths)])[m
[32m+[m[32m          eventListeners.push([mvcArray, mvcArray.addListener('set_at', updatePaths)])[m
[32m+[m
[32m+[m[32m          clearEvents = () => {[m
[32m+[m[32m            eventListeners.map(([obj, listenerHandle]) => // eslint-disable-line no-unused-vars[m
[32m+[m[32m              google.maps.event.removeListener(listenerHandle))[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m      }, {[m
[32m+[m[32m        deep: this.deepWatch,[m
[32m+[m[32m        immediate: true,[m
[32m+[m[32m      })[m
 [m
[31m-    var clearEvents = () => {}[m
[32m+[m[32m      this.$watch('path', (path) => {[m
[32m+[m[32m        if (path) {[m
[32m+[m[32m          clearEvents()[m
 [m
[31m-    // Watch paths, on our own, because we do not want to set either when it is[m
[31m-    // empty[m
[31m-    this.$watch('paths', (paths) => {[m
[31m-      if (paths) {[m
[31m-        clearEvents()[m
[32m+[m[32m          this.$polygonObject.setPaths(path)[m
 [m
[31m-        this.$polygonObject.setPaths(paths)[m
[32m+[m[32m          const mvcPath = this.$polygonObject.getPath()[m
[32m+[m[32m          const eventListeners = [][m
 [m
[31m-        const updatePaths = () => {[m
[31m-          this.$emit('paths_changed', this.$polygonObject.getPaths())[m
[31m-        }[m
[31m-        const eventListeners = [][m
[32m+[m[32m          const updatePaths = () => {[m
[32m+[m[32m            this.$emit('path_changed', this.$polygonObject.getPath())[m
[32m+[m[32m          }[m
 [m
[31m-        const mvcArray = this.$polygonObject.getPaths()[m
[31m-        for (let i = 0; i < mvcArray.getLength(); i++) {[m
[31m-          let mvcPath = mvcArray.getAt(i)[m
           eventListeners.push([mvcPath, mvcPath.addListener('insert_at', updatePaths)])[m
           eventListeners.push([mvcPath, mvcPath.addListener('remove_at', updatePaths)])[m
           eventListeners.push([mvcPath, mvcPath.addListener('set_at', updatePaths)])[m
[31m-        }[m
[31m-        eventListeners.push([mvcArray, mvcArray.addListener('insert_at', updatePaths)])[m
[31m-        eventListeners.push([mvcArray, mvcArray.addListener('remove_at', updatePaths)])[m
[31m-        eventListeners.push([mvcArray, mvcArray.addListener('set_at', updatePaths)])[m
 [m
[31m-        clearEvents = () => {[m
[31m-          eventListeners.map(([obj, listenerHandle]) => // eslint-disable-line no-unused-vars[m
[31m-            google.maps.event.removeListener(listenerHandle))[m
[32m+[m[32m          clearEvents = () => {[m
[32m+[m[32m            eventListeners.map(([obj, listenerHandle]) => // eslint-disable-line no-unused-vars[m
[32m+[m[32m              google.maps.event.removeListener(listenerHandle))[m
[32m+[m[32m          }[m
         }[m
[31m-      }[m
[31m-    }, {[m
[31m-      deep: this.deepWatch,[m
[31m-      immediate: true,[m
[31m-    })[m
[32m+[m[32m      }, {[m
[32m+[m[32m        deep: this.deepWatch,[m
[32m+[m[32m        immediate: true,[m
[32m+[m[32m      })[m
 [m
[31m-    this.$watch('path', (path) => {[m
[31m-      if (path) {[m
[31m-        clearEvents()[m
[31m-[m
[31m-        this.$polygonObject.setPaths(path)[m
[31m-[m
[31m-        const mvcPath = this.$polygonObject.getPath()[m
[31m-        const eventListeners = [][m
[31m-[m
[31m-        const updatePaths = () => {[m
[31m-          this.$emit('path_changed', this.$polygonObject.getPath())[m
[31m-        }[m
[31m-[m
[31m-        eventListeners.push([mvcPath, mvcPath.addListener('insert_at', updatePaths)])[m
[31m-        eventListeners.push([mvcPath, mvcPath.addListener('remove_at', updatePaths)])[m
[31m-        eventListeners.push([mvcPath, mvcPath.addListener('set_at', updatePaths)])[m
[31m-[m
[31m-        clearEvents = () => {[m
[31m-          eventListeners.map(([obj, listenerHandle]) => // eslint-disable-line no-unused-vars[m
[31m-            google.maps.event.removeListener(listenerHandle))[m
[31m-        }[m
[31m-      }[m
[31m-    }, {[m
[31m-      deep: this.deepWatch,[m
[31m-      immediate: true,[m
[32m+[m[32m      // Display the map[m
[32m+[m[32m      this.$polygonObject.setMap(this.$map)[m
     })[m
[31m-[m
[31m-    // Display the map[m
[31m-    this.$polygonObject.setMap(this.$map)[m
   },[m
 }[m
[1mdiff --git a/src/components/polyline.js b/src/components/polyline.js[m
[1mindex e2e1e50..d1a71e7 100644[m
[1m--- a/src/components/polyline.js[m
[1m+++ b/src/components/polyline.js[m
[36m@@ -53,45 +53,47 @@[m [mexport default {[m
     }[m
   },[m
 [m
[31m-  deferredReady () {[m
[31m-    const options = clone(this.getPropsValues())[m
[31m-    delete options.options[m
[31m-    Object.assign(options, this.options)[m
[31m-    this.$polylineObject = new google.maps.Polyline(options)[m
[31m-    this.$polylineObject.setMap(this.$map)[m
[32m+[m[32m  created () {[m
[32m+[m[32m    this.$mapPromise.then(() => {[m
[32m+[m[32m      const options = clone(this.getPropsValues())[m
[32m+[m[32m      delete options.options[m
[32m+[m[32m      Object.assign(options, this.options)[m
[32m+[m[32m      this.$polylineObject = new google.maps.Polyline(options)[m
[32m+[m[32m      this.$polylineObject.setMap(this.$map)[m
 [m
[31m-    propsBinder(this, this.$polylineObject, omit(props, ['deepWatch', 'path']))[m
[31m-    eventBinder(this, this.$polylineObject, events)[m
[32m+[m[32m      propsBinder(this, this.$polylineObject, omit(props, ['deepWatch', 'path']))[m
[32m+[m[32m      eventBinder(this, this.$polylineObject, events)[m
 [m
[31m-    var clearEvents = () => {}[m
[32m+[m[32m      var clearEvents = () => {}[m
 [m
[31m-    this.$watch('path', (path) => {[m
[31m-      if (path) {[m
[31m-        clearEvents()[m
[32m+[m[32m      this.$watch('path', (path) => {[m
[32m+[m[32m        if (path) {[m
[32m+[m[32m          clearEvents()[m
 [m
[31m-        this.$polylineObject.setPath(path)[m
[32m+[m[32m          this.$polylineObject.setPath(path)[m
 [m
[31m-        const mvcPath = this.$polylineObject.getPath()[m
[31m-        const eventListeners = [][m
[32m+[m[32m          const mvcPath = this.$polylineObject.getPath()[m
[32m+[m[32m          const eventListeners = [][m
 [m
[31m-        const updatePaths = () => {[m
[31m-          this.$emit('path_changed', this.$polylineObject.getPath())[m
[31m-        }[m
[32m+[m[32m          const updatePaths = () => {[m
[32m+[m[32m            this.$emit('path_changed', this.$polylineObject.getPath())[m
[32m+[m[32m          }[m
 [m
[31m-        eventListeners.push([mvcPath, mvcPath.addListener('insert_at', updatePaths)])[m
[31m-        eventListeners.push([mvcPath, mvcPath.addListener('remove_at', updatePaths)])[m
[31m-        eventListeners.push([mvcPath, mvcPath.addListener('set_at', updatePaths)])[m
[32m+[m[32m          eventListeners.push([mvcPath, mvcPath.addListener('insert_at', updatePaths)])[m
[32m+[m[32m          eventListeners.push([mvcPath, mvcPath.addListener('remove_at', updatePaths)])[m
[32m+[m[32m          eventListeners.push([mvcPath, mvcPath.addListener('set_at', updatePaths)])[m
 [m
[31m-        clearEvents = () => {[m
[31m-          eventListeners.map(([obj, listenerHandle]) => // eslint-disable-line no-unused-vars[m
[31m-            google.maps.event.removeListener(listenerHandle))[m
[32m+[m[32m          clearEvents = () => {[m
[32m+[m[32m            eventListeners.map(([obj, listenerHandle]) => // eslint-disable-line no-unused-vars[m
[32m+[m[32m              google.maps.event.removeListener(listenerHandle))[m
[32m+[m[32m          }[m
         }[m
[31m-      }[m
[31m-    }, {[m
[31m-      deep: this.deepWatch[m
[31m-    })[m
[32m+[m[32m      }, {[m
[32m+[m[32m        deep: this.deepWatch[m
[32m+[m[32m      })[m
 [m
[31m-    // Display the map[m
[31m-    this.$polylineObject.setMap(this.$map)[m
[32m+[m[32m      // Display the map[m
[32m+[m[32m      this.$polylineObject.setMap(this.$map)[m
[32m+[m[32m    })[m
   },[m
 }[m
[1mdiff --git a/src/components/rectangle.js b/src/components/rectangle.js[m
[1mindex 36a3a4e..2ab8e4e 100644[m
[1m--- a/src/components/rectangle.js[m
[1m+++ b/src/components/rectangle.js[m
[36m@@ -46,10 +46,12 @@[m [mexport default {[m
     return ''[m
   },[m
 [m
[31m-  deferredReady () {[m
[31m-    const options = clone(this.getPropsValues())[m
[31m-    options.map = this.$map[m
[31m-    this.createRectangle(options)[m
[32m+[m[32m  created () {[m
[32m+[m[32m    this.$mapPromise.then((map) => {[m
[32m+[m[32m      const options = clone(this.getPropsValues())[m
[32m+[m[32m      options.map = map[m
[32m+[m[32m      this.createRectangle(options)[m
[32m+[m[32m    })[m
   },[m
 [m
   methods: {[m
[1mdiff --git a/src/components/streetViewPanoramaImpl.js b/src/components/streetViewPanoramaImpl.js[m
[1mindex ba0f291..ae2220f 100644[m
[1m--- a/src/components/streetViewPanoramaImpl.js[m
[1m+++ b/src/components/streetViewPanoramaImpl.js[m
[36m@@ -1,7 +1,6 @@[m
 import omit from 'lodash/omit'[m
 [m
 import {loaded} from '../manager.js'[m
[31m-import {DeferredReadyMixin} from '../utils/deferredReady.js'[m
 import eventsBinder from '../utils/eventsBinder.js'[m
 import propsBinder from '../utils/propsBinder.js'[m
 import getPropsMixin from '../utils/getPropsValuesMixin.js'[m
[36m@@ -61,14 +60,14 @@[m [mconst customMethods = {[m
 const methods = Object.assign({}, customMethods)[m
 [m
 export default {[m
[31m-  mixins: [getPropsMixin, DeferredReadyMixin, mountableMixin],[m
[32m+[m[32m  mixins: [getPropsMixin, mountableMixin],[m
   props: props,[m
   replace: false, // necessary for css styles[m
   methods,[m
 [m
   created () {[m
[31m-    this.$panoCreated = new Promise((resolve, reject) => {[m
[31m-      this.$panoCreatedDeferred = {resolve, reject}[m
[32m+[m[32m    this.$panoPromise = new Promise((resolve, reject) => {[m
[32m+[m[32m      this.$panoPromiseDeferred = {resolve, reject}[m
     })[m
 [m
     const updateCenter = () => {[m
[36m@@ -108,7 +107,7 @@[m [mexport default {[m
     }[m
   },[m
 [m
[31m-  deferredReady () {[m
[32m+[m[32m  mounted () {[m
     return loaded.then(() => {[m
       // getting the DOM element where to create the map[m
       const element = this.$refs['vue-street-view-pano'][m
[36m@@ -146,12 +145,12 @@[m [mexport default {[m
       // binding events[m
       eventsBinder(this, this.$panoObject, events)[m
 [m
[31m-      this.$panoCreatedDeferred.resolve(this.$panoObject)[m
[32m+[m[32m      this.$panoPromiseDeferred.resolve(this.$panoObject)[m
 [m
[31m-      return this.$panoCreated[m
[32m+[m[32m      return this.$panoPromise[m
[32m+[m[32m    })[m
[32m+[m[32m    .catch((error) => {[m
[32m+[m[32m      throw error[m
     })[m
[31m-      .catch((error) => {[m
[31m-        throw error[m
[31m-      })[m
   },[m
 }[m
[1mdiff --git a/src/main.js b/src/main.js[m
[1mindex 0e2b2f3..ee4df32 100644[m
[1m--- a/src/main.js[m
[1m+++ b/src/main.js[m
[36m@@ -15,7 +15,6 @@[m [mimport Autocomplete from './components/autocomplete.vue'[m
 [m
 import MapElementMixin from './components/mapElementMixin'[m
 import MountableMixin from './utils/mountableMixin'[m
[31m-import {DeferredReady} from './utils/deferredReady'[m
 [m
 // export everything[m
 export {load, loaded, Marker, Cluster, Polyline, Polygon, Circle, Rectangle,[m
[36m@@ -27,8 +26,6 @@[m [mexport function install (Vue, options) {[m
     installComponents: true,[m
   }, options)[m
 [m
[31m-  Vue.use(DeferredReady)[m
[31m-[m
   const defaultResizeBus = new Vue()[m
   Vue.$gmapDefaultResizeBus = defaultResizeBus[m
   Vue.mixin({[m
[1mdiff --git a/src/utils/deferredReady.js b/src/utils/deferredReady.js[m
[1mdeleted file mode 100644[m
[1mindex 88839e8..0000000[m
[1m--- a/src/utils/deferredReady.js[m
[1m+++ /dev/null[m
[36m@@ -1,100 +0,0 @@[m
[31m-/**[m
[31m- * 1. Create a DeferredReady plugin.[m
[31m- *[m
[31m- * a. Updates options.configMergeStrategies to handle our new hook correctly (using Promise.all!)[m
[31m- *[m
[31m- * 2. VueGoogleMaps uses a DeferredReady mixin.[m
[31m- *[m
[31m- *     a. Each component checks for ancestors that are also DeferredReady (via dispatch/emit)[m
[31m- *     b. If no, then run DeferredReady after ready.[m
[31m- *     c. If yes, then run DeferredReady after parent's deferredReady.[m
[31m- *[m
[31m- *[m
[31m- * Say we have the following inheritance:[m
[31m- *[m
[31m- * --> == 'child of'[m
[31m- *[m
[31m- * A --> B --> C[m
[31m- *[m
[31m- * ready is called in the following order:[m
[31m- *[m
[31m- * A.ready, B.ready, C.ready[m
[31m- *[m
[31m- * C.ready -- no further ancestors supporting mixin, so in ready() we run+[m
[31m- *[m
[31m-   **/[m
[31m-[m
[31m-export var DeferredReady = {[m
[31m-  install (Vue, options) { // eslint-disable-line no-unused-vars[m
[31m-    // Use the same merge strategy as regular hooks[m
[31m-    Vue.config.optionMergeStrategies.deferredReady = Vue.config.optionMergeStrategies.created[m
[31m-    Vue.config.optionMergeStrategies.beforeDeferredReady = Vue.config.optionMergeStrategies.beforeDeferredReady[m
[31m-  },[m
[31m-}[m
[31m-[m
[31m-function runHooks (vm) {[m
[31m-  var hooks = vm.$options.deferredReady || [][m
[31m-[m
[31m-  // Run the beforeDeferredReady methods first[m
[31m-  var beforePromise = vm.beforeDeferredReady[m
[31m-    ? ((typeof vm.beforeDeferredReady.then === 'function')[m
[31m-      ? vm.beforeDeferredReady : Promise.all(vm.beforeDeferredReady))[m
[31m-    : Promise.resolve(null)[m
[31m-[m
[31m-  beforePromise.then(() => {[m
[31m-    if (typeof hooks === 'function') {[m
[31m-      hooks = [hooks][m
[31m-    }[m
[31m-    return Promise.all(hooks.map(x => {[m
[31m-      try {[m
[31m-        return x.apply(vm)[m
[31m-      } catch (err) {[m
[31m-        console.error(err.stack) // eslint-disable-line no-console[m
[31m-      }[m
[31m-    }))[m
[31m-    // execute all handlers, expecting them to return promises[m
[31m-    // wait for the promises to complete, before allowing child to execute[m
[31m-  })[m
[31m-    .then(() => {[m
[31m-      vm.$deferredReadyPromiseResolve()[m
[31m-    })[m
[31m-}[m
[31m-[m
[31m-export var DeferredReadyMixin = {[m
[31m-  /* Resolved after the deferredReady has been called[m
[31m-    and the (optional) promise it returns has been[m
[31m-    resolved */[m
[31m-  $deferredReadyPromise: false,[m
[31m-  $deferredReadyPromiseResolve: false,[m
[31m-  $deferredReadyAncestor: false,[m
[31m-[m
[31m-  created () {[m
[31m-    this.$deferredReadyPromise = new Promise((resolve, reject) => { // eslint-disable-line no-unused-vars[m
[31m-      this.$deferredReadyPromiseResolve = resolve[m
[31m-    })[m
[31m-[m
[31m-    let search = this.$parent[m
[31m-    while (search) {[m
[31m-      if (search.$deferredReadyPromise) {[m
[31m-        this.$deferredReadyAncestor = search[m
[31m-        break[m
[31m-      }[m
[31m-      search = search.$parent[m
[31m-    }[m
[31m-  },[m
[31m-[m
[31m-  mounted () {[m
[31m-    // Execute the hooks only if this is the first[m
[31m-    // ancestor that is a DeferredReady[m
[31m-    // this.$deferredReadyMountedPromiseResolve();[m
[31m-[m
[31m-    if (!this.$deferredReadyAncestor) {[m
[31m-      runHooks(this)[m
[31m-    } else {[m
[31m-      this.$deferredReadyAncestor.$deferredReadyPromise[m
[31m-        .then(() => {[m
[31m-          runHooks(this)[m
[31m-        })[m
[31m-    }[m
[31m-  },[m
[31m-}[m
